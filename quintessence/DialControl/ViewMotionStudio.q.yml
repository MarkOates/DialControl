properties:


  - name: font_bin
    type: AllegroFlare::FontBin*
    init_with: nullptr
    setter: before_initialized

  - name: camera_studio
    type: DialControl::CameraStudio
    init_with: '{}'
    getter_ref: true

  - name: motion_studio
    type: Timeline::MotionStudio
    init_with: '{}'
    getter_ref: true

  - name: initialized
    type: bool
    init_with: false
    getter: true


methods:


  - name: initialize
    guards: [ (!initialized), font_bin ]
    body: |
      camera_studio.set_font_bin(font_bin);
      camera_studio.initialize();

      // Camera A, for now
      AllegroFlare::Camera3D &camera_1 = *camera_studio.get_current_camera();

      //motion_studio.set_font_bin(font_bin);
      motion_studio.set_parameters(
         //build_parameters_for_placement3D(placement)
         Timeline::ParameterMappings::AllegroFlare::Camera3D::build_parameters(&camera_1)
      );
      motion_studio.set_parameter_views(
            build_parameter_views_for_parameters(
               font_bin,
               &motion_studio.get_parameters_ref()
            )
         );



      //AllegroFlare::Placement3D placement;
      //Timeline::MotionStudio motion_studio;
      //AllegroFlare::Placement2D &timeline_placement = motion_studio.get_timeline_placement_ref();
      //timeline_placement.position.x = 300;
      //timeline_placement.position.y = 700;

      //MusicElements music_elements;
      //motion_studio.set_parameters(build_parameters_for_music_elements(music_elements));
      //motion_studio.set_parameters(build_parameters_for_placement3D(placement));
      //motion_studio.set_parameter_views(
            //build_parameter_views_for_parameters(
               //&get_font_bin_ref(),
               //&motion_studio.get_parameters_ref()
            //)
         //);
      initialized = true;
      return;
    body_dependency_symbols:
      - Timeline::ParameterMappings::AllegroFlare::Camera3D


  - name: build_parameter_views_for_parameters
    type: std::vector<Timeline::ParameterView>
    parameters:
      - name: font_bin
        type: AllegroFlare::FontBin*
        default_argument: nullptr
      - name: p
        type: std::vector<Timeline::Parameter>*
        default_argument: nullptr
      - name: height
        type: float
        default_argument: Timeline::ParameterView::DEFAULT_HEIGHT
    body: |
       std::vector<Timeline::ParameterView> result;
       int x = 400;
       int y = 100;
       //int yd = 100;
       int i = 0;
       //float height = Timeline::ParameterView::DEFAULT_HEIGHT;
       //int yd = height;
       for (auto &pp : *p)
       {
          result.push_back(Timeline::ParameterView(font_bin, pp.name, &pp));
          result.back().set_height(height);
          i++;
       }
       return result;


  - name: update
    guards: [ initialized ]
    body: |
      camera_studio.update();
      return;


  - name: setup_camera_projection_on_live_camera
    guards: [ initialized ]
    body: |
      camera_studio.setup_projection_on_live_camera();
      return;


  - name: render_hud
    guards: [ initialized ]
    body: |
      camera_studio.setup_projection_on_hud_camera();
      camera_studio.draw_camera_info_overlay();
      return;


  - name: on_key_down
    parameters:
      - name: event
        type: ALLEGRO_EVENT*
        default_argument: nullptr
    guards: [ initialized ]
    body: |
      camera_studio.on_key_down(event);
      return;


dependencies:


  - symbol: DialControl::CameraStudio
    headers: [ DialControl/CameraStudio.hpp ]
  - symbol: Timeline::MotionStudio
    headers: [ Timeline/MotionStudio.hpp ]
  - symbol: ALLEGRO_EVENT
    headers: [ allegro5/allegro.h ]
  - symbol: AllegroFlare::FontBin
    headers: [ AllegroFlare/FontBin.hpp ]
  - symbol: Timeline::ParameterMappings::AllegroFlare::Camera3D
    headers: [ Timeline/ParameterMappings/AllegroFlare/Camera3D.hpp ]
  - symbol: Timeline::Parameter
    headers: [ Timeline/Parameter.hpp ]
  - symbol: Timeline::ParameterView
    headers: [ Timeline/ParameterView.hpp ]


